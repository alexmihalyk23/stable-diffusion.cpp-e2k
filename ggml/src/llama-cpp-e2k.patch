diff --git a/Makefile b/Makefile
index f9ec879..a39504d 100644
--- a/Makefile
+++ b/Makefile
@@ -95,6 +95,14 @@ ifeq ($(UNAME_M),$(filter $(UNAME_M),x86_64 i686))
 	#CFLAGS   += -mfma -mf16c -mavx
 	#CXXFLAGS += -mfma -mf16c -mavx
 endif
+ifeq ($(UNAME_M),e2k)
+ggml_e2k.o: ggml_e2k.c ggml.h
+	$(CC)  $(CFLAGS)   -c $< -o $@
+
+OBJS += ggml_e2k.o
+CFLAGS   += -ffast-math -mno-f16c -Wno-pointer-qual
+CXXFLAGS += -ffast-math -mno-f16c -Wno-pointer-qual
+endif
 ifneq ($(filter ppc64%,$(UNAME_M)),)
 	POWER9_M := $(shell grep "POWER9" /proc/cpuinfo)
 	ifneq (,$(findstring POWER9,$(POWER9_M)))
diff --git a/ggml.c b/ggml.c
index dbef993..3f744f3 100644
--- a/ggml.c
+++ b/ggml.c
@@ -191,6 +191,16 @@ typedef double ggml_float;
 #endif
 #endif
 
+#if defined(__e2k__) && defined(__EDG__)
+#define inline inline __attribute__((__always_inline__))
+#if __LCC__ < 126
+#define _mm256_set_m128i _mm256_set_m128i_lcc125
+static inline __m256i _mm256_set_m128i(__m128i hi, __m128i lo) {
+    return _mm256_insertf128_si256(_mm256_castsi128_si256(lo), hi, 1);
+}
+#endif
+#endif
+
 #ifdef __F16C__
 
 #ifdef _MSC_VER
@@ -1434,7 +1444,13 @@ static void dequantize_row_q8_0(const void * restrict vx, float * restrict y, in
     }
 }
 
+#ifdef __e2k__
+#define static
+#endif
 static void ggml_vec_dot_q4_0_q8_0(const int n, float * restrict s, const void * restrict vx, const void * restrict vy);
+#ifdef __e2k__
+#undef static
+#endif
 static void ggml_vec_dot_q4_1_q8_1(const int n, float * restrict s, const void * restrict vx, const void * restrict vy);
 static void ggml_vec_dot_q5_0_q8_0(const int n, float * restrict s, const void * restrict vx, const void * restrict vy);
 static void ggml_vec_dot_q5_1_q8_1(const int n, float * restrict s, const void * restrict vx, const void * restrict vy);
@@ -2091,6 +2107,9 @@ inline static void ggml_vec_dot_f16(const int n, float * restrict s, ggml_fp16_t
     *s = sumf;
 }
 
+#ifdef __e2k__
+#define ggml_vec_dot_q4_0_q8_0 __attribute__((unused)) ggml_vec_dot_q4_0_q8_0_unused
+#endif
 static void ggml_vec_dot_q4_0_q8_0(const int n, float * restrict s, const void * restrict vx, const void * restrict vy) {
     const int qk = QK8_0;
     const int nb = n / qk;
